name: Backend PR CI

on:
  pull_request:
    branches:
      # TODO: 개발 초기 github flow 적용으로 인해 main 브랜치의 PR로 적용
      # TODO: 향후 dev 브랜치로 변경 예정
      - main
      - dev
    types: [opened, reopened, edited, synchronize]
    paths:
      [
        ".github/workflows/**",
        "back/build.gradle.kts",
        "back/settings.gradle.kts",
        "back/src/**",
        "back/Dockerfile",
      ]

permissions:
  checks: write
  pull-requests: write # PR에 코멘트 남기기 위해 필요

jobs:
  backend-build:
    name: Backend Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./back
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          distribution: "graalvm"
          java-version: "21"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-

      - name: Build with Gradle
        run: ./gradlew build -x test

  backend-test:
    name: Backend Test
    needs: backend-build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./back

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          distribution: "graalvm"
          java-version: "21"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-

      - name: Execute Tests
        run: ./gradlew test

      - name: Generate JUnit Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # 항상 실행
        with:
          report_paths: "**/build/test-results/test/TEST-*.xml"
          comment: "true" # PR에 코멘트로 결과 남기기
